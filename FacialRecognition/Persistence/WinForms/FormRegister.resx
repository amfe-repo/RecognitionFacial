<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIABhHgAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAHihJ
        REFUeNrt3XuUXlWZ5/Hvs89b11TlwiUGjDSQAAGaDDIjIiows9rWWd3eFfAKM72WqIwR47QQEA1eSIIK
        EkSh11yQ9oIsYGzGXq3dzogggkADckuABBwkBBIwl6pUpd46Zz/zxz4VEkiqTlWqUlVv/T5r1UoteM/7
        nrPrPM97zj57PxtERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
        RERERERERERERERERERERERERERERERERERERERERESmAKv2sm8wc+ZWuro6cHe1mshEDWhz2toOorv7
        D8DSvUsAZstxB7P009xcs3o97wDagBoQ1OQi4y4COdDb0lLv7utrdndwd8zAfcnwEkAILwd+jJmZ5XPN
        7GTgjcAC4LXA9DIJiMj4yoGtwDpgNXC3O791718XQpO/HMsXDJUAVpJlXbhnhAAx+hFgHwbeDxwBtKqt
        RSa87cCTwE3Aj0PgyRgds0BR9LLzrcFOCeBSajWI0QBrA84AFgPHqT1FJq1HgG+ZxRvcw/YQInneDPxX
        ALL0mpXUav3EGAD2B1sKXAzMVfuJTGqzgbeBzQS/z916sywS41uB21ICyLK34G6A7Q92GXAO0KK2E2kI
        zcCJYLPB7nS33hCacP8lWQjLSJ351ka6OTiHHVcGItIgArAQaDbz293Jzf6C4A5ZlgGcCXxCwS/SsDLg
        HHc7Iz0ehGBmFEV+BPA5YJraSKShTQMWx8h8gBBjMLAPod5+kalioRkfcsdqZvHPSM/5h2Mb0EUagCAi
        46sGdDK8K/j3m/H3NTP+PaTLgQp6gVuBG4DHgB61vci4aweOIfXjvYs0VH8oR5hxWg04tXyDKsG/zN2v
        MLNutbnIhPKEO780YzFwQYUk0A6cUqP6vf+t7lwB1t3SktHbmwNL1Owi4+4y2tu76O2d1u3O5WYcQxrJ
        O5SFNeCQCi/cBtxgRndbWxfbtn1dbS4yYXyBnh5oa/sWfX393aRb9L9m6D6BQwIwo8IndJHu+dm2bcak
        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
</value>
  </data>
</root>